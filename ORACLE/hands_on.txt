SQL> create table tbl_employee(id number,name varchar(20),salary number);

Table created.

SQL> insert tbl_employee(101,'raja',2500);
insert tbl_employee(101,'raja',2500)
       *
ERROR at line 1:
ORA-00925: missing INTO keyword


SQL> insert into tbl_employee value(101,'raja',2500);
insert into tbl_employee value(101,'raja',2500)
                               *
ERROR at line 1:
ORA-00928: missing SELECT keyword


SQL> insert into tbl_employee values(101,'raja',2500);

1 row created.

SQL> insert into tbl_employee values(102,'kumar',3000);

1 row created.

SQL> insert into tbl_employee values(103,'ajay',3000);

1 row created.

SQL> insert into tbl_employee values(104,'vijay',3000);

1 row created.

SQL> insert into tbl_employee values(105,'arjun',3000);

1 row created.

SQL> select*from tbl_employee;

        ID NAME                     SALARY
---------- -------------------- ----------
       101 raja                       2500
       102 kumar                      3000
       103 ajay                       3000
       104 vijay                      3000
       105 arjun                      3000

SQL> alter table tbl_employee add (dno number);

Table altered.

SQL> select*from tbl_employee;

        ID NAME                     SALARY        DNO
---------- -------------------- ---------- ----------
       101 raja                       2500
       102 kumar                      3000
       103 ajay                       3000
       104 vijay                      3000
       105 arjun                      3000

SQL> update table tbl_employee dno=10 whare id=101 and 102;
update table tbl_employee dno=10 whare id=101 and 102
       *
ERROR at line 1:
ORA-00903: invalid table name


SQL> update table tbl_employee dno=10 whare id in (101,102);
update table tbl_employee dno=10 whare id in (101,102)
       *
ERROR at line 1:
ORA-00903: invalid table name


SQL> update table tbl_employee set dno=10 whare id in (101,102);
update table tbl_employee set dno=10 whare id in (101,102)
       *
ERROR at line 1:
ORA-00903: invalid table name


SQL> update tbl_employee set dno=10 whare id in (101,102);
update tbl_employee set dno=10 whare id in (101,102)
                               *
ERROR at line 1:
ORA-00933: SQL command not properly ended


SQL> update tbl_employee set dno=10 where id in (101,102);

2 rows updated.

SQL> update tbl_employee set dno=20 where id in (103,104);

2 rows updated.

SQL> update tbl_employee set dno=30 where id in (105);

1 row updated.

SQL> select*from tbl_employee;

        ID NAME                     SALARY        DNO
---------- -------------------- ---------- ----------
       101 raja                       2500         10
       102 kumar                      3000         10
       103 ajay                       3000         20
       104 vijay                      3000         20
       105 arjun                      3000         30

SQL> update table tbl_employee salary=4000 whare id in (104);
update table tbl_employee salary=4000 whare id in (104)
       *
ERROR at line 1:
ORA-00903: invalid table name


SQL> update tbl_employee set salary=4000 where id in (104);

1 row updated.

SQL> update tbl_employee set salary=7000 where id in (105);

1 row updated.

SQL> select*from tbl_employee;

        ID NAME                     SALARY        DNO
---------- -------------------- ---------- ----------
       101 raja                       2500         10
       102 kumar                      3000         10
       103 ajay                       3000         20
       104 vijay                      4000         20
       105 arjun                      7000         30

SQL> select dno,count(*) from tbl_employee group by dno;

       DNO   COUNT(*)
---------- ----------
        30          1
        20          2
        10          2

SQL> select dno,count(*),sum(salary),avg(salary),min(salary),max(salary) fro
m tbl_employee group by dno;

       DNO   COUNT(*) SUM(SALARY) AVG(SALARY) MIN(SALARY) MAX(SALARY)
---------- ---------- ----------- ----------- ----------- -----------
        30          1        7000        7000        7000        7000
        20          2        7000        3500        3000        4000
        10          2        5500        2750        2500        3000

SQL> select dno,count(*),sum(salary),avg(salary),min(salary),max(salary) from tbl_employee group by dno order by dno;

       DNO   COUNT(*) SUM(SALARY) AVG(SALARY) MIN(SALARY) MAX(SALARY)
---------- ---------- ----------- ----------- ----------- -----------
        10          2        5500        2750        2500        3000
        20          2        7000        3500        3000        4000
        30          1        7000        7000        7000        7000

SQL> select dno,count(*),sum(salary),avg(salary),min(salary),max(salary) from tbl_employee group by dno havinh min(salary) > 2500 order by dno;
select dno,count(*),sum(salary),avg(salary),min(salary),max(salary) from tbl_employee group by dno havinh min(salary) > 2500 order by dno

                       *
ERROR at line 1:
ORA-00933: SQL command not properly ended


SQL> select dno,count(*),sum(salary),avg(salary),min(salary),max(salary) from tbl_employee group by dno having min(salary) > 2500 order by dno;

       DNO   COUNT(*) SUM(SALARY) AVG(SALARY) MIN(SALARY) MAX(SALARY)
---------- ---------- ----------- ----------- ----------- -----------
        20          2        7000        3500        3000        4000
        30          1        7000        7000        7000        7000

SQL> select dno,count(*),sum(salary),avg(salary),min(salary),max(salary) from tbl_employee group by dno having min(salary) > 2000 order by dno;

       DNO   COUNT(*) SUM(SALARY) AVG(SALARY) MIN(SALARY) MAX(SALARY)
---------- ---------- ----------- ----------- ----------- -----------
        10          2        5500        2750        2500        3000
        20          2        7000        3500        3000        4000
        30          1        7000        7000        7000        7000

SQL> create table tbl_student(reg_no number(5) primary key,name varchar2(20)
 not null,age number(3) check(age>0),email varchar2(20) unique,location varc
har2(20) default 'erode');

Table created.

SQL> select*from tbl_student;

no rows selected

SQL> select * from tbl_student;

no rows selected

SQL> insert into tbl_student values(101,'ajay',20,'ajay@gmail.com','chb colo
ny');

1 row created.

SQL> select * from tbl_student;

    REG_NO NAME                        AGE EMAIL
---------- -------------------- ---------- --------------------
LOCATION
--------------------
       101 ajay                         20 ajay@gmail.com
chb colony

SQL>
SQL> insert into tbl_student values(102,'raju',21,'raju@gmail.com','null');

1 row created.

SQL> select * from tbl_student;

    REG_NO NAME                        AGE EMAIL
---------- -------------------- ---------- --------------------
LOCATION
--------------------
       101 ajay                         20 ajay@gmail.com
chb colony

       102 raju                         21 raju@gmail.com
null


SQL> insert into tbl_student values(103,'kumar',20,'kumar@gmail.com',null);

1 row created.

SQL> select * from tbl_student;

    REG_NO NAME                        AGE EMAIL
---------- -------------------- ---------- --------------------
LOCATION
--------------------
       101 ajay                         20 ajay@gmail.com
chb colony

       102 raju                         21 raju@gmail.com
null

       103 kumar                        20 kumar@gmail.com



SQL> insert into tbl_student values(104,'bheam',20,'bheam@gmail.com','');

1 row created.

SQL> select * from tbl_student;

    REG_NO NAME                        AGE EMAIL
---------- -------------------- ---------- --------------------
LOCATION
--------------------
       101 ajay                         20 ajay@gmail.com
chb colony

       102 raju                         21 raju@gmail.com
null

       103 kumar                        20 kumar@gmail.com



    REG_NO NAME                        AGE EMAIL
---------- -------------------- ---------- --------------------
LOCATION
--------------------
       104 bheam                        20 bheam@gmail.com



SQL> insert into tbl_student values(105,'ben',20,'ben@gmail.com',default);

1 row created.

SQL> select * from tbl_student;

    REG_NO NAME                        AGE EMAIL
---------- -------------------- ---------- --------------------
LOCATION
--------------------
       101 ajay                         20 ajay@gmail.com
chb colony

       102 raju                         21 raju@gmail.com
null

       103 kumar                        20 kumar@gmail.com



    REG_NO NAME                        AGE EMAIL
---------- -------------------- ---------- --------------------
LOCATION
--------------------
       104 bheam                        20 bheam@gmail.com


       105 ben                          20 ben@gmail.com
erode


SQL> insert into tbl_student values(106,'hema',20,'hema@gmail.com');
insert into tbl_student values(106,'hema',20,'hema@gmail.com')
            *
ERROR at line 1:
ORA-00947: not enough values


SQL> select * from tbl_student;

    REG_NO NAME                        AGE EMAIL
---------- -------------------- ---------- --------------------
LOCATION
--------------------
       101 ajay                         20 ajay@gmail.com
chb colony

       102 raju                         21 raju@gmail.com
null

       103 kumar                        20 kumar@gmail.com



    REG_NO NAME                        AGE EMAIL
---------- -------------------- ---------- --------------------
LOCATION
--------------------
       104 bheam                        20 bheam@gmail.com


       105 ben                          20 ben@gmail.com
erode


SQL> create table department(dno number(5) primary key,dname varchar2(20));

Table created.

SQL> create table employee(eid number(5) primary key,ename varchar2(20),esalary number(5),dno number(5) foreign key(dno) references department(dno));
create table employee(eid number(5) primary key,ename varchar2(20),esalary number(5),dno number(5) foreign key(dno) references department(dno))
                                                                                                   *
ERROR at line 1:
ORA-00907: missing right parenthesis


SQL> create table employee(eid number(5) primary key,ename varchar2(20),esalary number(5),dno number(5) foreign key(dno) references department(dno));
create table employee(eid number(5) primary key,ename varchar2(20),esalary number(5),dno number(5) foreign key(dno) references department(dno))
                                                                                                   *
ERROR at line 1:
ORA-00907: missing right parenthesis


SQL> create table employee(eid number(5) primary key,ename varchar2(20),esalary number(5),dno number(5), foreign key(dno) references department(dno));

Table created.

SQL> insert into department values(10, 'cse');

1 row created.

SQL> insert into employee values(101, 'ajith',2000,10);

1 row created.

SQL> insert into employee values(102, 'vijay',2500,10);

1 row created.

SQL> insert into department values(20, 'it');

1 row created.

SQL> insert into employee values(103, 'vetri',4000,20);

1 row created.

SQL> insert into employee values(104, 'maran',7000,20);

1 row created.

SQL> select*from employee
  2
SQL> select*from employee;

       EID ENAME                   ESALARY        DNO
---------- -------------------- ---------- ----------
       101 ajith                      2000         10
       102 vijay                      2500         10
       103 vetri                      4000         20
       104 maran                      7000         20

SQL> select*from department;

       DNO DNAME
---------- --------------------
        10 cse
        20 it

SQL> select*from tab
  2
SQL> select*from tab;

TNAME                          TABTYPE  CLUSTERID
------------------------------ ------- ----------
AQ$DEF$_AQCALL                 VIEW
AQ$DEF$_AQERROR                VIEW
AQ$_DEF$_AQCALL_F              VIEW
AQ$_DEF$_AQERROR_F             VIEW
AQ$_INTERNET_AGENTS            TABLE
AQ$_INTERNET_AGENT_PRIVS       TABLE
AQ$_QUEUES                     TABLE
AQ$_QUEUE_TABLES               TABLE
AQ$_SCHEDULES                  TABLE
CATALOG                        SYNONYM
CLIENT_MASTER                  TABLE

TNAME                          TABTYPE  CLUSTERID
------------------------------ ------- ----------
COL                            SYNONYM
DEF$_AQCALL                    TABLE
DEF$_AQERROR                   TABLE
DEF$_CALLDEST                  TABLE
DEF$_DEFAULTDEST               TABLE
DEF$_DESTINATION               TABLE
DEF$_ERROR                     TABLE
DEF$_LOB                       TABLE
DEF$_ORIGIN                    TABLE
DEF$_PROPAGATOR                TABLE
DEF$_PUSHED_TRANSACTIONS       TABLE

TNAME                          TABTYPE  CLUSTERID
------------------------------ ------- ----------
DEPARTMENT                     TABLE
EMPLOYEE                       TABLE
HELP                           TABLE
LOGMNRC_DBNAME_UID_MAP         TABLE
LOGMNRC_GSBA                   TABLE
LOGMNRC_GSII                   TABLE
LOGMNRC_GTCS                   TABLE
LOGMNRC_GTLO                   TABLE
LOGMNRP_CTAS_PART_MAP          TABLE
LOGMNRT_MDDL$                  TABLE
LOGMNR_AGE_SPILL$              TABLE

TNAME                          TABTYPE  CLUSTERID
------------------------------ ------- ----------
LOGMNR_ATTRCOL$                TABLE
LOGMNR_ATTRIBUTE$              TABLE
LOGMNR_CCOL$                   TABLE
LOGMNR_CDEF$                   TABLE
LOGMNR_COL$                    TABLE
LOGMNR_COLTYPE$                TABLE
LOGMNR_DICTIONARY$             TABLE
LOGMNR_DICTSTATE$              TABLE
LOGMNR_ENC$                    TABLE
LOGMNR_ERROR$                  TABLE
LOGMNR_FILTER$                 TABLE

TNAME                          TABTYPE  CLUSTERID
------------------------------ ------- ----------
LOGMNR_GLOBAL$                 TABLE
LOGMNR_GT_TAB_INCLUDE$         TABLE
LOGMNR_GT_USER_INCLUDE$        TABLE
LOGMNR_GT_XID_INCLUDE$         TABLE
LOGMNR_ICOL$                   TABLE
LOGMNR_IND$                    TABLE
LOGMNR_INDCOMPART$             TABLE
LOGMNR_INDPART$                TABLE
LOGMNR_INDSUBPART$             TABLE
LOGMNR_INTEGRATED_SPILL$       TABLE
LOGMNR_KOPM$                   TABLE

TNAME                          TABTYPE  CLUSTERID
------------------------------ ------- ----------
LOGMNR_LOB$                    TABLE
LOGMNR_LOBFRAG$                TABLE
LOGMNR_LOG$                    TABLE
LOGMNR_LOGMNR_BUILDLOG         TABLE
LOGMNR_NTAB$                   TABLE
LOGMNR_OBJ$                    TABLE
LOGMNR_OPQTYPE$                TABLE
LOGMNR_PARAMETER$              TABLE
LOGMNR_PARTOBJ$                TABLE
LOGMNR_PROCESSED_LOG$          TABLE
LOGMNR_PROPS$                  TABLE

TNAME                          TABTYPE  CLUSTERID
------------------------------ ------- ----------
LOGMNR_REFCON$                 TABLE
LOGMNR_RESTART_CKPT$           TABLE
LOGMNR_RESTART_CKPT_TXINFO$    TABLE
LOGMNR_SEED$                   TABLE
LOGMNR_SESSION$                TABLE
LOGMNR_SESSION_ACTIONS$        TABLE
LOGMNR_SESSION_EVOLVE$         TABLE
LOGMNR_SPILL$                  TABLE
LOGMNR_SUBCOLTYPE$             TABLE
LOGMNR_TAB$                    TABLE
LOGMNR_TABCOMPART$             TABLE

TNAME                          TABTYPE  CLUSTERID
------------------------------ ------- ----------
LOGMNR_TABPART$                TABLE
LOGMNR_TABSUBPART$             TABLE
LOGMNR_TS$                     TABLE
LOGMNR_TYPE$                   TABLE
LOGMNR_UID$                    TABLE
LOGMNR_USER$                   TABLE
LOGSTDBY$APPLY_MILESTONE       TABLE
LOGSTDBY$APPLY_PROGRESS        TABLE
LOGSTDBY$EDS_TABLES            TABLE
LOGSTDBY$EVENTS                TABLE
LOGSTDBY$FLASHBACK_SCN         TABLE

TNAME                          TABTYPE  CLUSTERID
------------------------------ ------- ----------
LOGSTDBY$HISTORY               TABLE
LOGSTDBY$PARAMETERS            TABLE
LOGSTDBY$PLSQL                 TABLE
LOGSTDBY$SCN                   TABLE
LOGSTDBY$SKIP                  TABLE
LOGSTDBY$SKIP_SUPPORT          TABLE
LOGSTDBY$SKIP_TRANSACTION      TABLE
MVIEW$_ADV_AJG                 TABLE
MVIEW$_ADV_BASETABLE           TABLE
MVIEW$_ADV_CLIQUE              TABLE
MVIEW$_ADV_ELIGIBLE            TABLE

TNAME                          TABTYPE  CLUSTERID
------------------------------ ------- ----------
MVIEW$_ADV_EXCEPTIONS          TABLE
MVIEW$_ADV_FILTER              TABLE
MVIEW$_ADV_FILTERINSTANCE      TABLE
MVIEW$_ADV_FJG                 TABLE
MVIEW$_ADV_GC                  TABLE
MVIEW$_ADV_INFO                TABLE
MVIEW$_ADV_JOURNAL             TABLE
MVIEW$_ADV_LEVEL               TABLE
MVIEW$_ADV_LOG                 TABLE
MVIEW$_ADV_OUTPUT              TABLE
MVIEW$_ADV_PARAMETERS          TABLE

TNAME                          TABTYPE  CLUSTERID
------------------------------ ------- ----------
MVIEW$_ADV_PLAN                TABLE
MVIEW$_ADV_PRETTY              TABLE
MVIEW$_ADV_ROLLUP              TABLE
MVIEW$_ADV_SQLDEPEND           TABLE
MVIEW$_ADV_TEMP                TABLE
MVIEW$_ADV_WORKLOAD            TABLE
MVIEW_EVALUATIONS              VIEW
MVIEW_EXCEPTIONS               VIEW
MVIEW_FILTER                   VIEW
MVIEW_FILTERINSTANCE           VIEW
MVIEW_LOG                      VIEW

TNAME                          TABTYPE  CLUSTERID
------------------------------ ------- ----------
MVIEW_RECOMMENDATIONS          VIEW
MVIEW_WORKLOAD                 VIEW
OL$                            TABLE
OL$HINTS                       TABLE
OL$NODES                       TABLE
PRODUCT_PRIVS                  VIEW
PRODUCT_USER_PROFILE           SYNONYM
PUBLICSYN                      SYNONYM
REPCAT$_AUDIT_ATTRIBUTE        TABLE
REPCAT$_AUDIT_COLUMN           TABLE
REPCAT$_COLUMN_GROUP           TABLE

TNAME                          TABTYPE  CLUSTERID
------------------------------ ------- ----------
REPCAT$_CONFLICT               TABLE
REPCAT$_DDL                    TABLE
REPCAT$_EXCEPTIONS             TABLE
REPCAT$_EXTENSION              TABLE
REPCAT$_FLAVORS                TABLE
REPCAT$_FLAVOR_OBJECTS         TABLE
REPCAT$_GENERATED              TABLE
REPCAT$_GROUPED_COLUMN         TABLE
REPCAT$_INSTANTIATION_DDL      TABLE
REPCAT$_KEY_COLUMNS            TABLE
REPCAT$_OBJECT_PARMS           TABLE

TNAME                          TABTYPE  CLUSTERID
------------------------------ ------- ----------
REPCAT$_OBJECT_TYPES           TABLE
REPCAT$_PARAMETER_COLUMN       TABLE
REPCAT$_PRIORITY               TABLE
REPCAT$_PRIORITY_GROUP         TABLE
REPCAT$_REFRESH_TEMPLATES      TABLE
REPCAT$_REPCAT                 TABLE
REPCAT$_REPCATLOG              TABLE
REPCAT$_REPCOLUMN              TABLE
REPCAT$_REPGROUP_PRIVS         TABLE
REPCAT$_REPOBJECT              TABLE
REPCAT$_REPPROP                TABLE

TNAME                          TABTYPE  CLUSTERID
------------------------------ ------- ----------
REPCAT$_REPSCHEMA              TABLE
REPCAT$_RESOLUTION             TABLE
REPCAT$_RESOLUTION_METHOD      TABLE
REPCAT$_RESOLUTION_STATISTICS  TABLE
REPCAT$_RESOL_STATS_CONTROL    TABLE
REPCAT$_RUNTIME_PARMS          TABLE
REPCAT$_SITES_NEW              TABLE
REPCAT$_SITE_OBJECTS           TABLE
REPCAT$_SNAPGROUP              TABLE
REPCAT$_TEMPLATE_OBJECTS       TABLE
REPCAT$_TEMPLATE_PARMS         TABLE

TNAME                          TABTYPE  CLUSTERID
------------------------------ ------- ----------
REPCAT$_TEMPLATE_REFGROUPS     TABLE
REPCAT$_TEMPLATE_SITES         TABLE
REPCAT$_TEMPLATE_STATUS        TABLE
REPCAT$_TEMPLATE_TARGETS       TABLE
REPCAT$_TEMPLATE_TYPES         TABLE
REPCAT$_USER_AUTHORIZATIONS    TABLE
REPCAT$_USER_PARM_VALUES       TABLE
SQLPLUS_PRODUCT_PROFILE        TABLE
SYSCATALOG                     SYNONYM
SYSFILES                       SYNONYM
TAB                            SYNONYM

TNAME                          TABTYPE  CLUSTERID
------------------------------ ------- ----------
TABQUOTAS                      SYNONYM
TBL_EMPLOYEE                   TABLE
TBL_STUDENT                    TABLE

179 rows selected.

SQL> select*from tbl_employee
  2
SQL> select*from tbl_employee;

        ID NAME                     SALARY        DNO
---------- -------------------- ---------- ----------
       101 raja                       2500         10
       102 kumar                      3000         10
       103 ajay                       3000         20
       104 vijay                      4000         20
       105 arjun                      7000         30

SQL> create view myview as select*from tbi_employee where dno=10;
create view myview as select*from tbi_employee where dno=10
                                  *
ERROR at line 1:
ORA-00942: table or view does not exist


SQL> create view myview as select*from tbl_employee where dno=10;

View created.

SQL> select*from tbl_employee;

        ID NAME                     SALARY        DNO
---------- -------------------- ---------- ----------
       101 raja                       2500         10
       102 kumar                      3000         10
       103 ajay                       3000         20
       104 vijay                      4000         20
       105 arjun                      7000         30

SQL> select*from myview;

        ID NAME                     SALARY        DNO
---------- -------------------- ---------- ----------
       101 raja                       2500         10
       102 kumar                      3000         10

SQL> update myview set salary=7000 where id=101;

1 row updated.

SQL> select*from myview;

        ID NAME                     SALARY        DNO
---------- -------------------- ---------- ----------
       101 raja                       7000         10
       102 kumar                      3000         10

SQL> select*from tbl_employee;

        ID NAME                     SALARY        DNO
---------- -------------------- ---------- ----------
       101 raja                       7000         10
       102 kumar                      3000         10
       103 ajay                       3000         20
       104 vijay                      4000         20
       105 arjun                      7000         30

SQL> drop view myview;

View dropped.